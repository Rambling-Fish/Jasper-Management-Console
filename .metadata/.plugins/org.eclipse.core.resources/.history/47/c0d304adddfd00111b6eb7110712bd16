<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>jmanage</groupId>
  <artifactId>main</artifactId>
  <version>1.0</version>
  <packaging>pom</packaging>
<!--  change the final package name to JasperMGMT or whatever name gets picked up -->
  <name>main</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
 <!--  include the children projects that required Maven to build then and solve thier dependencies  -->
 <!--  modules are: alerts, utils, cmdui,crypto,config, services, management, connector, and tools -->
 <!--  the rest of the modules are using ant build script for building so we are using "antrun" plugin to compile them -->
  <modules>
  	<module>auth</module>
  	<module>alerts</module>
  	<module>cmdui</module>
  	<module>config</module>
  	<module>crypto</module>
  	<module>services</module>
  	<module>utils</module>
  	<module>management</module>
  	<module>connector</module>
  	<module>tools</module>  	
  </modules>
<!--  the above section will build jars for components and the following section puts them in unified /lib directory -->
   <build>
   <plugins>
   <!-- Maven resource plug-in for copying required components jars and thier dependencies into a unified output /lib directory-->
   <plugin>
     <groupId>org.apache.maven.plugins</groupId>
     <artifactId>maven-resources-plugin</artifactId>
     <version>2.6</version>
     <executions>
       <execution>
         <id>copy-resources</id>
         <!-- here the phase you need -->
         <phase>package</phase>
         <goals>
           <goal>copy-resources</goal>
         </goals>
         <configuration>
         <!--  this refers to the "main" output directory -->
          <!--<outputDirectory>${project.prarent.build.outputDirectory}</outputDirectory>-->
           <resources>          
             <resource> <!--  components jars -->
               <targetpaths>
             	<targetpath>${project.prarent.build.outputDirectory}/lib</targetpath>
             </targetpaths>
              <directory>target</directory>
               <includes>
               <include>*.jar</include></includes>
             </resource>
              <resource> <!--  dependencies jars -->
              <targetpath>${project.prarent.build.outputDirectory}/lib</targetpath>
               <directory>target/dependency</directory>
               <includes>
               <include>*.jar</include></includes>
             </resource>
             <resources> <!-- /config directory and contents  -->
           		<targetpaths>
            	<targetpath>${project.prarent.build.outputDirectory}/config</targetpath>
             	</targetpaths>
         		<directory>${project.basedir}/config/src/main/config</directory>
         	 </resources>
        	 <resource><!-- Add scripts to /bindirectory and contents  -->
        	 </resource>
         </resources>              
         </configuration>            
       </execution>
     </executions>
     </plugin>
        <!-- Build the modules that requires antrun plugin: connector, jmanage jar and webUI component -->
    <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>ant-magic</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks>
                <ant antfile="${basedir}/webui/build.xml"
                     target="compile"/>
              </tasks>
            </configuration>
          </execution>
        </executions>
      </plugin>
   <!-- The configuration of maven-assembly-plugin to produce the file assembly for the JManage package-->
   <plugin>
      <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.2.2</version>
                <!-- The configuration of the plugin -->
                <configuration>
                    <!-- Specifies the configuration file of the assembly plugin -->
                    <descriptors>
                        <descriptor>assembly.xml</descriptor>
                    </descriptors>
                </configuration>
            </plugin>
            <!-- Add the antrun plug-in  -->
       	 </plugins>
 </build>
            
 </project>
